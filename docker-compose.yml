services:
  telegram-bot:
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    restart: always
    networks:
      - botnet

  order-generator-service:
    hostname: order-generation-service
    build:
      context: ./order_generation_service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    restart: always
    networks:
      - botnet

  customers_db:
    hostname: customers_db
    image: postgres:latest
    container_name: customers_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - customers_db_data:/var/lib/postgresql/data
      - ./order_generation_service/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - botnet

  warehouse_db:
    hostname: warehouse_db
    image: postgres:latest
    container_name: warehouse_db
    environment:
      POSTGRES_USER: ${WAREHOUSE_DB_USER}
      POSTGRES_PASSWORD: ${WAREHOUSE_DB_PASSWORD}
      POSTGRES_DB: ${WAREHOUSE_DB_NAME}
    networks:
      - botnet
    ports:
      - "5433:5432"
    volumes:
      - warehouse_db_data:/var/lib/postgresql/data
      - ./order_generation_service/sql/init_warehouse.sql:/docker-entrypoint-initdb.d/init_warehouse.sql

networks:
  botnet:
    driver: bridge

volumes:
  customers_db_data:
  warehouse_db_data: